#This lammps script allows you to do the tensile simulation for MgZnCaSr BMG mechanical properties
#developed by Prof. Shin-Pon Ju at NSYSU 2017/04/08
#modified by Mr. Chen-Jia Yang at 4075-2 2017/10/11
#include files:
#1.NVTNPT.in
#2. manipulate by perl 

#output files:
#1.00relax.dat --> check whether the initial relaxation is done.

#modified on 11/28/2016

#define parameters here
log HEA.log ## Perl
variable jumpname index Tension.in # for "jump" filename ==> Perl
variable folder index HEA_Tension
variable samplepxx equal pxx
variable samplepyy equal pyy
variable samplepzz equal pzz
variable currentT equal 300
variable ts equal 0.001 # for units metal: 1fs 
variable pdamp equal ${ts}*1000 
shell mkdir ${folder}

#INITIALIZATION

units metal 
dimension 3 
boundary p p p 
atom_style atomic 
atom_modify map array

#region	box block 0 12 0 12 0 12 
#create_box	5 box # there are two types of atoms in the box
# ---------- Create Atoms ---------------------
read_data 11stress_40.data
#replicate 29 29 29
#include scale.in
#read_dump 00stress_67.cfg 2000 x y z box yes purge yes replace no trim no add yes format native
# ---------- Define Interatomic Potential ---------------------                                     
pair_style meam/c
pair_coeff * * ref.lib Nb Mo W Ta V   Bestfitted.meam_I1000_P95 Nb Mo W Ta V                                                
#---------------------------------------------

# ---------- modify density ---------------------                                     
#variable d equal density
#variable e equal 12.36  #HEA density
#variable a equal ${d}/${e}
#variable t equal ${a}^(1/3)          
#
#print $(density)
#print ${t}
#
#change_box all x scale ${t} y scale ${t} z scale ${t} remap
##run 0
#write_data grainm.data
#print $(density)
#---------------------------------------------

############jump ${jumpname} npt2    ################

neighbor 0.3 bin 
neigh_modify delay 10 every 5 check yes one 5000

comm_style      tiled
#
#balance 1.05 rcb
#
#min_style	     cg
#thermo 50
#thermo_style custom step temp  density pxx  pyy  pzz pe press
##dump 1 all custom 50 00MIN_*.cfg id type x y z
#minimize 1e-12 1e-6 50000 100000
##undump 1
#write_data  min1.data 
#
#fix 5 all box/relax  x 0.0 y 0.0 z 1000 # make the stress in the tensile direction a little compressed for getting the ref. length by "Interpolation" for strain 
#min_style	  cg
#thermo 100
#thermo_style custom step temp  density pxx  pyy  pzz pe press
#minimize 1e-9 1e-6 50000 100000
#unfix 5
#write_data  min2.data 
#
#timestep 1e-5   
#velocity all create 1 12345 mom yes rot yes dist gaussian
#
#thermo 1 
#thermo_style custom step temp density pxx pyy pzz  etotal  #pe 
#run 0
#reset_timestep 0
#
#fix 1 all npt temp 1 1 1e-3  aniso 0.0 0.0 0.1    #-----------check-----------
#
#thermo 200  
#thermo_style custom step temp density pxx pyy pzz pe  cella cellb cellc pe 
#dump 1 all custom 5000 00NPT1_*.cfg id type x y z
#run 30000
#write_data  NPT1.data 
#unfix 1
#undump 1
#
##########label npt2
#
#reset_timestep 0
#timestep 1e-3 
#velocity all create 1 12345 mom yes rot yes dist gaussian   
#velocity all scale 1 
#fix 1 all npt temp 1.0 300.0 0.1  x 0.0 0.0 ${pdamp} y 0.0 0.0 ${pdamp} z 800.0 800.0 ${pdamp}  #-----------check-----------
#thermo 200  
#thermo_style custom step temp density pxx pyy pzz pe  cella cellb cellc pe 
#dump 1 all custom 5000 00NPT2_*.cfg id type x y z
#run 50000
#write_data  NPT2.data 
#unfix 1
#
#undump 1
#
##change_box all x delta -10 10 boundary p p p  # the lx should be long enough!!!!    test


# ----- Find the initial structure-------
#shell cd ${folder}
#write_data freesurface.data
#
#
#shell cd .. 
#
#variable lztemp equal lz
#
####If using dynamics way, setting initial velocity for 300 K
#
#timestep ${ts}
#velocity all create ${currentT} 12345 mom yes rot yes dist gaussian
#velocity all scale ${currentT}
#
##variable folderloop loop 1
##label folder_loop
#
#balance 1.05 rcb
#
##fix 5 all momentum 1 linear 1 1 1 rescale angular
#
## dynamical way
#
##fix 1 all nve
#fix 1 all npt temp ${currentT} ${currentT} 0.1 x 0.0 0.0 ${pdamp} y 0.0 0.0 ${pdamp} z 800.0 800.0 ${pdamp}  #-----------check-----------
##fix 2 all temp/rescale 1 ${currentT} ${currentT} 1 1
##fix 3 all press/berendsen x 0.0 0.0 ${pdamp} y 0.0 0.0 ${pdamp} z -800.0 -800.0 ${pdamp} modulus 1000 #making it a little compressed
#thermo 100
#thermo_style custom step temp lz pxx pyy pzz  
#dump 2 all custom 100 00RSNPT_*.cfg id type x y z
#reset_timestep 0
#run 0   #5000
#
#unfix 1
##unfix 2
##unfix 3
#undump 2
#######get the refernce length

variable lz equal lz
variable tmp equal "lz"
variable L0 equal ${tmp}
variable tenratio equal 0.001                 #-----------check-----------
variable strain equal "(lz - v_L0)/v_L0"
variable p1 equal "v_strain"
variable currentzlo equal zlo

######## tensile simulation from here #######

variable i loop 200 ##tension loop begin

label tension_i

variable zten equal ${L0}+(${tenratio}*${L0})*(${i}-1)+${currentzlo}
change_box all z final ${currentzlo} ${zten} remap units box

balance 1.05 rcb

#####The following is for relaxation

# dynamical way

reset_timestep 0
variable totalE equal pe

#fix 1 all nve
fix 1 all npt temp ${currentT} ${currentT} 0.1 x 0.0 0.0 ${pdamp} y 0.0 0.0 ${pdamp} ########## modify  #-----------check-----------
#fix 2 all temp/rescale 1 ${currentT} ${currentT} 1 1
#fix 3 all press/berendsen x 0.0 0.0 ${pdamp} y 0.0 0.0 ${pdamp} modulus 1000 #making it a little compressed
thermo 100 
thermo_style custom step temp pe lz pzz v_p1 v_totalE
run 5000 #2000
unfix 1
#unfix 2
#unfix 3
# end of dynamical way 

## statics way

#min_style	     cg
#minimize 1e-12 1e-6 50000 100000

# end of statics way

########relaxation completes

#####The following is to dump cfg for sampling (10 cfg files)

shell cd ${folder}

# dynamical way

#reset_timestep 0

#fix 1 all nve
#fix 2 all temp/rescale 1 ${currentT} ${currentT} 1 1
#fix 3 all press/berendsen x 0.0 0.0 ${pdamp} y 0.0 0.0 ${pdamp} modulus 1000 #making it a little compressed

# end of dynamical way

# statics way
#velocity all set 0.0 0.0 0.0
#velocity all create 1 12345 mom yes rot yes dist gaussian
reset_timestep 0

timestep 0.001

# end of statics way
fix 1 all npt temp ${currentT} ${currentT} 0.1  x 0.0 0.0 ${pdamp} y 0.0 0.0 ${pdamp}      ##########modify  #-----------check-----------
#fix 1 all nve
#fix 2 all temp/rescale 1 ${currentT} ${currentT} 1 1
#fix 3 all press/berendsen x 0.0 0.0 100 y 0.0 0.0 100 modulus 1000 #making it a little compressed
fix ave all ave/time 20 100 2000 v_totalE format                    0
fix avexx all ave/time 20 100 2000 v_samplepxx format                    0
fix aveyy all ave/time 20 100 2000 v_samplepyy format                    0
fix avezz all ave/time 20 100 2000 v_samplepzz format                    0

#dump 1 all custom 200 stress_${i}_*.cfg id type x y z
thermo 100 
thermo_style custom step temp pe lz pzz v_p1 v_totalE
run 2000# for dynamical way, need to use more steps and ave/time 1000

print "********sample here"

###################################
variable avePE equal f_ave
variable avepxx equal f_avexx
variable avepyy equal f_aveyy
variable avepzz equal f_avezz

#variable pxxGPa equal -${avepxx}*1.01325/10000 #atm to Gpa
#variable pyyGPa equal -${avepyy}*1.01325/10000
#variable pzzGPa equal -${avepzz}*1.01325/10000

variable pxxGPa equal -${avepxx}/10000 #bar to Gpa
variable pyyGPa equal -${avepyy}/10000
variable pzzGPa equal -${avepzz}/10000

print "lz: $(lz) Vol: $(vol) PE: ${avePE}  Pxx: ${pxxGPa} Pyy: ${pyyGPa} Pzz: ${pzzGPa} " append Strain_Stress.dat screen no
###################################
unfix 1
#unfix 2
#unfix 3
unfix ave
unfix avexx
unfix aveyy
unfix avezz
#undump 1
variable a equal ${i}-1+40 #need to check
dump 1 all custom 1 00stress_${a}.cfg id type x y z 
run 0
undump 1
variable num equal ${a}%10
if "${num} == 0" then &
    "write_data 11stress_${a}.data"
shell cd ..
next i
jump ${jumpname} tension_i

#next folderloop
#jump ${jumpname} folder_loop

print "Simulation done!!!"
